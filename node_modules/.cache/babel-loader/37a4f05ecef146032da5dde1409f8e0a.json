{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeffe\\\\OneDrive\\\\Desktop\\\\React\\\\learningReact\\\\deep-dive-into-routes\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((a, b) => {\n    if (ascending) {\n      return a.id - b.id;\n    } else {\n      return b.id - a.id;\n    }\n  }).map(quote => {\n    return { ...quote,\n      id: quote.id\n    };\n  }).reverse();\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending); //If we know is equals we are indeed sorting in ascending order\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const changeSortingHandler = event => {\n    //using query params to change the sorting\n    //using useHistory to change the url\n    history.push(\"/quotes/?sort=\" + (isSortingAscending ? \"desc\" : \"asc\")); //using location to change the currently loaded page\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? \"Descending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: props.quotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","a","b","id","map","quote","reverse","QuoteList","props","history","location","queryParams","URLSearchParams","search","sortedQuotes","isSortingAscending","get","changeSortingHandler","event","push","sorting","list","author","text"],"sources":["C:/Users/jeffe/OneDrive/Desktop/React/learningReact/deep-dive-into-routes/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((a, b) => {\n    if (ascending) {\n      return a.id - b.id;\n    } else {\n      return b.id - a.id;\n    }\n  }).map((quote) => {\n    return {\n      ...quote,\n      id: quote.id,\n    };\n  }).reverse();\n}\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  //If we know is equals we are indeed sorting in ascending order\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const changeSortingHandler = (event) => {\n    //using query params to change the sorting\n    //using useHistory to change the url\n    history.push(\"/quotes/?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n\n    //using location to change the currently loaded page\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,kBAAxC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;EACxC,OAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC3B,IAAIH,SAAJ,EAAe;MACb,OAAOE,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAAhB;IACD,CAFD,MAEO;MACL,OAAOD,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAAhB;IACD;EACF,CANM,EAMJC,GANI,CAMCC,KAAD,IAAW;IAChB,OAAO,EACL,GAAGA,KADE;MAELF,EAAE,EAAEE,KAAK,CAACF;IAFL,CAAP;EAID,CAXM,EAWJG,OAXI,EAAP;AAYD,CAbD;;AAeA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,OAAO,GAAGhB,UAAU,EAA1B;EACA,MAAMiB,QAAQ,GAAGhB,WAAW,EAA5B;EACA,MAAMiB,WAAW,GAAG,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAApB;EACA,MAAMC,YAAY,GAAGjB,UAAU,CAACW,KAAK,CAACV,MAAP,EAAeiB,kBAAf,CAA/B,CAJ2B,CAK3B;;EACA,MAAMA,kBAAkB,GAAGJ,WAAW,CAACK,GAAZ,CAAgB,MAAhB,MAA4B,KAAvD;;EACA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;IACtC;IACA;IACAT,OAAO,CAACU,IAAR,CAAa,oBAAoBJ,kBAAkB,GAAG,MAAH,GAAY,KAAlD,CAAb,EAHsC,CAKtC;EACD,CAND;;EAOA,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,SAAS,EAAEnB,OAAO,CAACwB,OAAxB;MAAA,uBACE;QAAQ,OAAO,EAAEH,oBAAjB;QAAA,oBACQF,kBAAkB,GAAG,YAAH,GAAkB,WAD5C;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAI,SAAS,EAAEnB,OAAO,CAACyB,IAAvB;MAAA,UACGb,KAAK,CAACV,MAAN,CAAaM,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;QAEE,EAAE,EAAEA,KAAK,CAACF,EAFZ;QAGE,MAAM,EAAEE,KAAK,CAACiB,MAHhB;QAIE,IAAI,EAAEjB,KAAK,CAACkB;MAJd,GACOlB,KAAK,CAACF,EADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAjCD;;GAAMI,S;UACYd,U,EACCC,W;;;KAFba,S;AAmCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}