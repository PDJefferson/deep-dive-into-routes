{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeffe\\\\OneDrive\\\\Desktop\\\\React\\\\learningReact\\\\deep-dive-into-routes\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { useParams, Outlet, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quotedetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const {\n    quoteId\n  } = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true, quoteId);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered focused\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quotedetail, \"2NXQ+AERLlRAUikvt105l2mAfoo=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = Quotedetail;\nexport default Quotedetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quotedetail\");","map":{"version":3,"names":["Fragment","useEffect","useParams","Outlet","useRouteMatch","Comments","HighlightedQuote","useHttp","getSingleQuote","LoadingSpinner","Quotedetail","match","quoteId","sendRequest","status","data","loadedQuote","error","text","author"],"sources":["C:/Users/jeffe/OneDrive/Desktop/React/learningReact/deep-dive-into-routes/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\r\nimport {\r\n  useParams,\r\n  Outlet,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\nconst Quotedetail = () => {\r\n  const match = useRouteMatch();\r\n  const { quoteId } = useParams();\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true, quoteId);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"centered focused\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>no quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Quotedetail;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,aAHF,QAIO,kBAJP;AAKA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,KAAK,GAAGP,aAAa,EAA3B;EACA,MAAM;IAAEQ;EAAF,IAAcV,SAAS,EAA7B;EAEA,MAAM;IACJW,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,WAHF;IAIJC;EAJI,IAKFV,OAAO,CAACC,cAAD,EAAiB,IAAjB,EAAuBI,OAAvB,CALX;EAOAX,SAAS,CAAC,MAAM;IACdY,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;EAIA,IAAIE,MAAM,KAAK,SAAf,EAA0B;IACxB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAIG,KAAJ,EAAW;IACT,oBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACE;QAAA,UAAIA;MAAJ;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAI,CAACD,WAAW,CAACE,IAAjB,EAAuB;IACrB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEF,WAAW,CAACE,IAApC;MAA0C,MAAM,EAAEF,WAAW,CAACG;IAA9D;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAzCD;;GAAMT,W;UACUN,a,EACMF,S,EAOhBK,O;;;KATAG,W;AA0CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}