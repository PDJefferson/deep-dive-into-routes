{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeffe\\\\OneDrive\\\\Desktop\\\\React\\\\learningReact\\\\deep-dive-into-routes\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning is fun\"\n}, {\n  id: \"q2\",\n  author: \"Manu\",\n  text: \"Learning is fun too\"\n}, {\n  id: \"q3\",\n  author: \"Leo\",\n  text: \"Learning is fun if you do not know what you are learning\"\n}, {\n  id: \"q4\",\n  author: \"EZ\",\n  text: \"Learning is fun but it is not fun if you do not know what you are learning\"\n}];\n\nconst Quotedetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  console.log(match);\n  const quoteId = useParams().quoteId;\n  const quote = DUMMY_QUOTES.find(q => q.id === quoteId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${quoteId}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quotedetail, \"y0pUkc/QyFWdpQigBG3/mOPcCuk=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = Quotedetail;\nexport default Quotedetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quotedetail\");","map":{"version":3,"names":["Fragment","useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","Quotedetail","match","console","log","quoteId","quote","find","q"],"sources":["C:/Users/jeffe/OneDrive/Desktop/React/learningReact/deep-dive-into-routes/src/pages/QuoteDetail.js"],"sourcesContent":["import { Fragment } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning is fun\" },\r\n  { id: \"q2\", author: \"Manu\", text: \"Learning is fun too\" },\r\n  {\r\n    id: \"q3\",\r\n    author: \"Leo\",\r\n    text: \"Learning is fun if you do not know what you are learning\",\r\n  },\r\n  {\r\n    id: \"q4\",\r\n    author: \"EZ\",\r\n    text: \"Learning is fun but it is not fun if you do not know what you are learning\",\r\n  },\r\n];\r\n\r\nconst Quotedetail = () => {\r\n  const match = useRouteMatch();\r\n  console.log(match);\r\n  const quoteId = useParams().quoteId;\r\n  const quote = DUMMY_QUOTES.find((q) => q.id === quoteId);\r\n  if (!quote) {\r\n    return <p>no quote found!</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={`/quotes/${quoteId}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${quoteId}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`/quotes/${quoteId}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Quotedetail;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,KAApB;EAA2BC,IAAI,EAAE;AAAjC,CADmB,EAEnB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,MAApB;EAA4BC,IAAI,EAAE;AAAlC,CAFmB,EAGnB;EACEF,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,KAFV;EAGEC,IAAI,EAAE;AAHR,CAHmB,EAQnB;EACEF,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,IAFV;EAGEC,IAAI,EAAE;AAHR,CARmB,CAArB;;AAeA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAMC,KAAK,GAAGR,aAAa,EAA3B;EACAS,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACA,MAAMG,OAAO,GAAGd,SAAS,GAAGc,OAA5B;EACA,MAAMC,KAAK,GAAGT,YAAY,CAACU,IAAb,CAAmBC,CAAD,IAAOA,CAAC,CAACV,EAAF,KAASO,OAAlC,CAAd;;EACA,IAAI,CAACC,KAAL,EAAY;IACV,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBACE,QAAC,QAAD;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEA,KAAK,CAACN,IAA9B;MAAoC,MAAM,EAAEM,KAAK,CAACP;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,KAAD;MAAO,IAAI,EAAG,WAAUM,OAAQ,EAAhC;MAAmC,KAAK,MAAxC;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,WAAUA,OAAQ,WAAnD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eASE,QAAC,KAAD;MAAO,IAAI,EAAG,WAAUA,OAAQ,WAAhC;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAvBD;;GAAMJ,W;UACUP,a,EAEEH,S;;;KAHZU,W;AAwBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}