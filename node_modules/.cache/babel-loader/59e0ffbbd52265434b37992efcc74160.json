{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeffe\\\\OneDrive\\\\Desktop\\\\React\\\\learningReact\\\\deep-dive-into-routes\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning is fun\"\n}, {\n  id: \"q2\",\n  author: \"Manu\",\n  text: \"Learning is fun too\"\n}, {\n  id: \"q3\",\n  author: \"Leo\",\n  text: \"Learning is fun if you do not know what you are learning\"\n}, {\n  id: \"q4\",\n  author: \"EZ\",\n  text: \"Learning is fun but it is not fun if you do not know what you are learning\"\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [loadedQuotes]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY_QUOTES\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllQuotes, \"xmzqdF0SAq1bnsS9hD1yci6YQlY=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"sources":["C:/Users/jeffe/OneDrive/Desktop/React/learningReact/deep-dive-into-routes/src/pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning is fun\" },\r\n  { id: \"q2\", author: \"Manu\", text: \"Learning is fun too\" },\r\n  {\r\n    id: \"q3\",\r\n    author: \"Leo\",\r\n    text: \"Learning is fun if you do not know what you are learning\",\r\n  },\r\n  {\r\n    id: \"q4\",\r\n    author: \"EZ\",\r\n    text: \"Learning is fun but it is not fun if you do not know what you are learning\",\r\n  },\r\n];\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [loadedQuotes]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  return <QuoteList quotes={DUMMY_QUOTES} />;\r\n};\r\nexport default AllQuotes;\r\n"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AACA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,KAApB;EAA2BC,IAAI,EAAE;AAAjC,CADmB,EAEnB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,MAApB;EAA4BC,IAAI,EAAE;AAAlC,CAFmB,EAGnB;EACEF,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,KAFV;EAGEC,IAAI,EAAE;AAHR,CAHmB,EAQnB;EACEF,EAAE,EAAE,IADN;EAEEC,MAAM,EAAE,IAFV;EAGEC,IAAI,EAAE;AAHR,CARmB,CAArB;;AAcA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACtB,MAAM;IACJC,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,YAHF;IAIJC;EAJI,IAKFb,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;EAOAC,SAAS,CAAC,MAAM;IACdO,WAAW;EACZ,CAFQ,EAEN,CAACG,YAAD,CAFM,CAAT;;EAGA,IAAIF,MAAM,KAAK,SAAf,EAA0B;IACxB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,oBAAO,QAAC,SAAD;IAAW,MAAM,EAAEN;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAnBD;;GAAMI,S;UAMAR,O;;;KANAQ,S;AAoBN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}